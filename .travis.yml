sudo: false
language: java
os: linux
addons:
  apt:
    packages:
      - python3-pip
jdk:
  - openjdk7
  - openjdk8
  - oraclejdk8
  - oraclejdk9

before_install:
  - java -version
  - python3 --version

install:
  - wget "http://www.antlr3.org/download/antlr-3.5.2-complete.jar" -P "libs"
  - export CLASSPATH="${CLASSPATH}:$(pwd)/libs/*"
  - export JAVA="${JAVA_HOME}/bin/java"  # workaround for undetected jni.h
  - export JAVAC="${JAVA_HOME}/bin/javac"  # workaround for mismatched javac version
  # Java tests
  - mkdir -p lib
  - wget "https://github.com/mbdevpl/open-fortran-parser-xml/releases/download/v0.2.0/org.jacoco.agent-0.8.1-runtime.jar" -O "lib/org.jacoco.agent-0.8.1-runtime.jar"
  - wget "https://github.com/mbdevpl/open-fortran-parser-xml/releases/download/v0.2.0/org.jacoco.cli-0.8.1-nodeps.jar" -O "lib/org.jacoco.cli-0.8.1-nodeps.jar"

script:
  #- ./autoconf.sh  # skip this on Travis
  - ./configure --prefix=$HOME/.local
  - time make all
  - make check

after_success:
  - export CLASSPATH="${CLASSPATH}:$(pwd)/build/*"
  - export JAVA_TOOL_OPTIONS="-javaagent:$(pwd)/lib/org.jacoco.agent-0.8.1-runtime.jar=excludes=fortran.ofp.parser.java.FortranParserExtras_FortranParser08:fortran.ofp.parser.java.FortranParserRiceCAF_FortranParser08:fortran/ofp/parser/java/FortranParserLOPe_FortranParser08"
  - java fortran.ofp.FrontEnd
  - ls tests/rule-tests/*.f{90,03} | xargs java fortran.ofp.FrontEnd
  - ls tests/rule-f08-tests/*.f{,90} | xargs java fortran.ofp.FrontEnd
  - ls tests/f08-tests/*.f08 | xargs java fortran.ofp.FrontEnd
  - ls tests/bug-reports/*.f{,90,03} | xargs java fortran.ofp.FrontEnd
  - ls tests/LOPe/*.f90 | xargs java fortran.ofp.FrontEnd --LOPExt
  - ls tests/caf_2.0/*.caf | xargs java fortran.ofp.FrontEnd --RiceCAF
  - ls tests/rule-tests/*.f{90,03} | xargs java fortran.ofp.FrontEnd --verbose >/dev/null
  - ls tests/rule-f08-tests/*.f{,90} | xargs java fortran.ofp.FrontEnd --verbose >/dev/null
  - ls tests/f08-tests/*.f08 | xargs java fortran.ofp.FrontEnd --verbose >/dev/null
  - ls tests/bug-reports/*.f{,90,03} | xargs java fortran.ofp.FrontEnd --verbose >/dev/null
  - ls tests/LOPe/*.f90 | xargs java fortran.ofp.FrontEnd --LOPExt --verbose >/dev/null
  - ls tests/caf_2.0/*.caf | xargs java fortran.ofp.FrontEnd --RiceCAF --verbose >/dev/null
  - java fortran.ofp.FrontEnd --silent tests/f08-tests/R818-F08.f08
  - java fortran.ofp.FrontEnd --verbose tests/f08-tests/R818-F08.f08
  - java fortran.ofp.FrontEnd --class fortran.ofp.parser.java.FortranParserActionPrint tests/f08-tests/R818-F08.f08
  - java fortran.ofp.FrontEnd --tokens --class fortran.ofp.parser.java.FortranParserActionPrint tests/f08-tests/R818-F08.f08
  - java fortran.ofp.FrontEnd --tokenfile /dev/null tests/f08-tests/R818-F08.f08
  - java fortran.ofp.FrontEnd --alltokens --tokenfile /dev/null tests/f08-tests/R818-F08.f08
  - java fortran.ofp.FrontEnd --LOPExt --verbose tests/LOPe/halo-stmt.f90
  - java fortran.ofp.FrontEnd --RiceCAF --verbose tests/caf_2.0/lockset.caf
  - unset JAVA_TOOL_OPTIONS
  - java -jar "lib/org.jacoco.cli-0.8.1-nodeps.jar" report "jacoco.exec" --classfiles "build/" --sourcefiles "src/" --xml jacoco.xml
  - pip3 install --user codecov
  - codecov

before_deploy:
  - pip3 install -U --user version_query || pip3 install -U version_query
  - wget https://gist.githubusercontent.com/mbdevpl/cdbc3dab3ae1941870dcaa5bb1b358bc/raw/travis_bintray_descriptor_gen.py
  - python3 travis_bintray_descriptor_gen.py "$(python3 -m version_query -p .)" "$TRAVIS_OS_NAME-$TRAVIS_JDK_VERSION" "build/*.jar"
  - cat ".bintray.json"

deploy:
  - provider: bintray
    file: ".bintray.json"
    user: "mbdevpl"
    key:
      secure: "ME2CnsB116sxzr5qlVOKh8bP+r4HZPPhPBCehVYy7FYvxi8qPu97wncv5vL+UU6f3Yeov2wLjLDm3Y4+jOiVsqrYRZ7J7pPhxBKDRmpVPmpgO6yBt8E5K8fqsA1k0phZPacOALqcrFS4w9eTM3royv5gNUR2Txq9DFHpzktMN2LRKvjqkQfaoPCLBD32I2T+JI176X82tqJ6BXeG/Ws2+vK6MUjC3KGfj2sAEGnSYKLIh+oepq9OteJmI6qB6wEhlHfAUfa2x98yNOphtziSTuW9PwH0wJ5eLmL+zNJ98zg2+stUpQfEnepYPVKKFGEnljPFGZttpPvt6MLHQYrpDbmbdSh6mlrf+52p0AHVry9Lur+CxnQQqXMhPB52EgDJH2lnDQQmwWdbl1zBTPypZfn/MhJF+SfgfgKW0ls4dHaB2zcxuZ1FC4jvB4C/6YI+gNAEQsOwMNuS5Cy/rfYQHUIqZfjW27i7myDhgIkDP557JrsDt9C1fmAEG2EaWfZ6CrmkrzfElVolbvLQJC+dALgVeh3SEWhubJt5TegEyBhnFuFSyWe/4PHiJXSQaJRYQnwtQ6izBqiD9MLIfcZloyN0snfAxm2dLfnNK9CiIlurFwJ3qbMrh76IR+f2hCk9tj/4tIkLT3Ou6DBf+cRTW9osfaZbvki0XcrqQ/D5Efs="
    on:
      all_branches: true
    skip_cleanup: true

notifications:
  slack:
    secure: "iacMW1kNXQEk9Ud43CmKl9cT36wXRmsAE0d0xW5xqwJcrFu/rVksnCCksAM6IkNJYwPrBFfB/FgT31MUUrecoegaekRlw54uIDutlUOJrSU6sJbYxrhDRqf2Yz20QDLQkdRoKziTvaG7ffBRhR7FcXRvt4Ky/jiSEkaVk2vEmI3K9C+2JdDZc0tzvGzReZbhCqxoGBs3I4P0n5HEy5P3iLePEKFU8cknWdZj/1CMcHuuCJinexiHsKZj/HsLnMTs3e0l0CX9e9W467AqzeTZ6/aykMt8on237KOJHXLZj+5/K0bv8t8xPRftayR/q+NunNMQOX+HFNibggfrvo6IQzlKll1N2E6bSuaoP6R4X4ZIWKZIHeT9YTS1jPTC/O6OONI7E0zgbobTdg7sOfoOFTlbIMYx/hC6g1rtskXa2jHlzTWUgvnSP7pMJNNNkFWcOKxKIS6zZve0id/dPMHfyb/4EAoLGMVyV/Nfm4GmeCYOocZz5GWPuqwXHNL38fW8mXTzcpAl8fcGlomTWFuiLy8CWKu5LK+Qx71bNolOY4OMFLspk9m9vOgQL998MGKTbvI55sPWcuI99ucfh5izyNwUTMlgjE52RynBVjmmiXhA2FqIsWiDbzxtp8Fo4lkZEq5nO0DFm2FOBYli7bHM9I9bkioEBNewysHAieU/1lU="
  email: false
